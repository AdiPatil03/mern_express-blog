{"version":3,"sources":["component/Header.js","i18n.js","component/NavBar.js","common/services/api-service.js","component/ArticleThumbnail.js","component/Home.js","component/Banner.js","component/Login.js","component/ArticleForm.js","common/Regexpattern.js","component/SignUp.js","component/Article.js","component/Tag.js","component/Archive.js","component/LandingPage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","resources","en","translation","ma","hi","i18n","use","Backend","LanguageDetector","initReactI18next","init","lng","fallbackLng","debug","interpolation","escapeValue","NavBar","props","componentDidMount","clearActive","navbar","componentDidUpdate","showCollapsedMenu","setState","previousState","toggleNavState","state","document","getElementById","classList","add","remove","showDropDown","dropdownState","changeLanguage","language","clearLoggedIn","setNavbar","domElements","getElementsByClassName","i","length","id","currentNavEle","_","isNull","render","translate","word","Translation","t","navbarContent","onClick","to","loggedin","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","xmlns","style","marginBottom","width","height","viewBox","d","fill","aria-haspopup","aria-labelledby","React","Component","APIServices","Promise","resolve","reject","fetch","then","response","status","json","data","error","message","catch","slug","months","articleDate","Date","createdAt","getDate","getMonth","getFullYear","tag","archive","article","method","body","JSON","stringify","headers","name","setTimeout","users","includes","currentUser","user","Error","delay","push","ArticleThumbnail","thumbnail","setEdit","isUndefined","title","author","tags","map","key","Home","articles","Banner","banner","isEmpty","role","Login","submit","event","username","password","resp","setLoggedIn","history","pathname","preventDefault","handleUserNameChange","target","value","handlePasswordChange","marginTop","onSubmit","onChange","ArticleForm","handleTitleChange","handleBodyChange","handleTagSelect","index","isChecked","handleAddNewTagChange","newTag","handleAddNewTagClick","prevState","concat","forEach","editMode","apiServices","update","clearEditMode","create","rows","bind","checked","Regexpattern","usernameRegex","passwordRegex","SignUp","msg","cPwd","regex","test","pwd","handleCPWDChange","disabled","Article","_isMounted","match","params","find","setEditMode","componentWillUnmount","Tag","articlesByTag","Archive","articlesByArchive","LandingPage","sessionStorage","getItem","allArticlesPreviews","previews","archives","setNavbarOnLoad","setItem","removeItem","window","location","lastIndexOf","nav","substr","path","exact","App","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.e65fd6f1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"blog-header py-3\">\r\n            <div className=\"row flex-nowrap justify-content-between align-items-center\">\r\n                <div className=\"col-12 text-center\">\r\n                    <a className=\"blog-header-logo text-dark\" href=\"/\">Aditya&rsquo;s Blogs</a>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import i18n from 'i18next';\r\nimport {initReactI18next} from 'react-i18next';\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport translationEN from './locales/en/translation.json';\r\nimport translationMa from './locales/ma/translation.json';\r\nimport translationHi from './locales/hi/translation.json';\r\n\r\n// the translations\r\nconst resources = {\r\n    en: {\r\n        translation: translationEN\r\n    },\r\n    ma: {\r\n        translation: translationMa\r\n    },\r\n    hi: {\r\n        translation: translationHi\r\n    }\r\n};\r\n\r\ni18n\r\n    .use(Backend)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources,\r\n        lng:           'en',\r\n        fallbackLng:   'en',\r\n        debug:         false,\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport i18n from '../i18n';\r\nimport PropTypes from 'prop-types';\r\nimport {Translation} from 'react-i18next';\r\nimport {Link} from 'react-router-dom';\r\nimport _ from 'lodash';\r\n\r\n/* eslint-disable */\r\nexport default class NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toggleNavState: false,\r\n            dropdownState:  false,\r\n            language:       'English'\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.clearActive(this.props.navbar);\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.clearActive(this.props.navbar);\r\n    }\r\n\r\n    showCollapsedMenu = () => {\r\n        this.setState(previousState => ({\r\n            toggleNavState: !previousState.toggleNavState\r\n        }), () => {\r\n\r\n            if (this.state.toggleNavState) {\r\n                document.getElementById('navbarTogglerDemo03').classList.add('show');\r\n            } else {\r\n                document.getElementById('navbarTogglerDemo03').classList.remove('show');\r\n            }\r\n        });\r\n    };\r\n\r\n    showDropDown = () => {\r\n        this.setState(previousState => ({\r\n            dropdownState: !previousState.dropdownState\r\n        }), () => {\r\n\r\n            if (this.state.dropdownState) {\r\n                document.getElementById('dropdownMenu').classList.add('show');\r\n            } else {\r\n                document.getElementById('dropdownMenu').classList.remove('show');\r\n            }\r\n        });\r\n    };\r\n\r\n    changeLanguage = (lng) => {\r\n        let language = '';\r\n        switch (lng) {\r\n            case 'en': {\r\n                language = 'English';\r\n                break;\r\n            }\r\n            case 'ma': {\r\n                language = 'Marathi';\r\n                break;\r\n            }\r\n            case 'hi': {\r\n                language = 'Hindi';\r\n                break;\r\n            }\r\n            default: {\r\n                language = 'English';\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState(previousState => ({\r\n            language,\r\n            dropdownState: !previousState.dropdownState\r\n        }));\r\n        i18n.changeLanguage(lng);\r\n        document.getElementById('dropdownMenu').classList.remove('show');\r\n    };\r\n\r\n    clearLoggedIn = () => {\r\n        this.clearActive('home');\r\n        this.props.clearLoggedIn();\r\n    }\r\n\r\n    setNavbar = navbar => {\r\n        let domElements = document.getElementsByClassName('nav-link');\r\n        for (let i = 0; i < domElements.length; i++) {\r\n            domElements[i].className = 'nav-link';\r\n        }\r\n        this.props.setNavbar(navbar);\r\n    };\r\n\r\n    clearActive = id => {\r\n        let currentNavEle = document.getElementById(id);\r\n        if (!_.isNull(currentNavEle)) {\r\n            let domElements = document.getElementsByClassName('nav-link');\r\n            for (let i = 0; i < domElements.length; i++) {\r\n                domElements[i].className = 'nav-link';\r\n            }\r\n            currentNavEle.className = 'nav-link active';\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n        const translate = word => (<Translation>{t => t(word)}</Translation>);\r\n        let navbarContent =\r\n            <>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" id=\"home\" onClick={() => this.setNavbar('home')} to=\"/\">{translate('nav-bar.home')}</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" id=\"login\" onClick={() => this.setNavbar('login')} to=\"/login\">{translate('nav-bar.log-in')}</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" id=\"signup\" onClick={() => this.setNavbar('signup')} to=\"/signup\">{translate('nav-bar.sign-up')}</Link>\r\n                </li>\r\n            </>;\r\n        if (this.props.loggedin) {\r\n            navbarContent =\r\n            <>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" id=\"home\" onClick={() => this.setNavbar('home')} to=\"/\">{translate('nav-bar.home')}</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" id=\"create-article\" onClick={() => this.setNavbar('create-article')} to=\"/create-article\">{translate('nav-bar.new-post')}</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" onClick={this.clearLoggedIn} to=\"/\">{translate('nav-bar.log-out')}</Link>\r\n                </li>\r\n            </>;\r\n        }\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        onClick={this.showCollapsedMenu}\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#navbarTogglerDemo03\"\r\n                        aria-controls=\"navbarTogglerDemo03\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n                        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            {navbarContent}\r\n                        </ul>\r\n                        <form className=\"form-inline\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" style={{marginBottom: '5px'}} width=\"25\" height=\"25\" viewBox=\"0 0 25 25\">\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                                <path d=\" M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z \" className=\"css-c4d79v\"></path>\r\n                            </svg>\r\n                            <div className=\"dropdown\">\r\n                                <button\r\n                                    className=\"btn btn-transparent dropdown-toggle\"\r\n                                    onClick={this.showDropDown}\r\n                                    type=\"button\"\r\n                                    id=\"dropdownMenuButton\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\">\r\n                                    {this.state.language}\r\n                                </button>\r\n                                <div className=\"dropdown-menu\" id=\"dropdownMenu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                    <a className=\"dropdown-item\" onClick={() => this.changeLanguage('en')} href=\"#\">English</a>\r\n                                    <a className=\"dropdown-item\" onClick={() => this.changeLanguage('ma')} href=\"#\">Marathi</a>\r\n                                    <a className=\"dropdown-item\" onClick={() => this.changeLanguage('hi')} href=\"#\">Hindi</a>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavBar.propTypes = {\r\n    loggedin:      PropTypes.bool,\r\n    clearLoggedIn: PropTypes.func\r\n};\r\n","/* eslint-disable */\r\nexport default class APIServices {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    allArticlesPreviews() {\r\n        return new Promise((resolve, reject) => {\r\n            fetch('http://localhost:3010/api/all-articles')\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    response.json().then(data => resolve({...data}));\r\n                } else {\r\n                    response.json().then(error => reject({message: error.message}));\r\n                }\r\n            }).catch(error => reject({message: error.message}));\r\n        });\r\n\t}\r\n\r\n\t// allArchives() {\r\n\t// \treturn new Promise((resolve, reject) => {\r\n    //         fetch('http://localhost:3010/api/all-archives')\r\n    //         .then(response => {\r\n    //             if (response.status === 200) {\r\n    //                 response.json().then(data => resolve({data}));\r\n    //             } else {\r\n    //                 response.json().then(error => reject({message: error.message}));\r\n    //             }\r\n    //         }).catch(error => reject({message: error.message}));\r\n\t// \t});\t\t\r\n\t// }\r\n\r\n\t// allTags() {\r\n\t// \treturn new Promise((resolve, reject) => {\r\n    //         fetch('http://localhost:3010/api/all-tags')\r\n    //         .then(response => {\r\n    //             if (response.status === 200) {\r\n    //                 response.json().then(data => resolve({data}));\r\n    //             } else {\r\n    //                 response.json().then(error => reject({message: error.message}));\r\n    //             }\r\n    //         }).catch(error => reject({message: error.message}));\r\n\t// \t});\t\t\r\n\t// }\r\n\r\n    find(slug) {\r\n        const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`http://localhost:3010/api/article/${slug}`)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    response.json().then(data => {\r\n                        let articleDate = new Date(data.createdAt);\r\n\r\n                        data.createdAt = `${articleDate.getDate()} ${months[articleDate.getMonth()]}, ${articleDate.getFullYear()}`;\r\n                        resolve({...data});\r\n                    });\r\n                } else {\r\n                    response.json().then(error => reject({message: error.message}));\r\n                }\r\n            }).catch(error => reject({message: error.message}));\r\n        });\r\n    }\r\n\r\n    articlesByTag(tag) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`http://localhost:3010/api/tag/${tag}`)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    response.json().then(data => resolve([...data]));\r\n                } else {\r\n                    response.json().then(error => reject({message: error.message}));\r\n                }\r\n            }).catch(error => reject({message: error.message}));\r\n        });\r\n    }\r\n\r\n    articlesByArchive(archive) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`http://localhost:3010/api/archive/${archive}`)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    response.json().then(data => resolve([...data]));\r\n                } else {\r\n                    response.json().then(error => reject({message: error.message}));\r\n                }\r\n            }).catch(error => reject({message: error.message}));\r\n        });\r\n    }\r\n\r\n\tcreate(article) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n            fetch('http://localhost:3010/api/new-article', {\r\n                method:  'post',\r\n                body:    JSON.stringify(article),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then(response => {\r\n                if (response.status === 200) {\r\n                    response.json().then(data => resolve({...data}));\r\n                } else {\r\n                    response.json.then(error => reject({message: error.message}));\r\n                }\r\n            }).catch(error => reject({message: error.message}));\r\n\t\t});\t\r\n\t}\r\n\r\n    update(article) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`http://localhost:3010/api/update-article/${article.slug}`, {\r\n                method:  'post',\r\n                body:    JSON.stringify(article),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then(response => {\r\n                if (response.status === 200) {\r\n                    response.json().then(data => resolve({...data}));\r\n                } else {\r\n                    response.json.then(error => reject({message: error.message}));\r\n                }\r\n            }).catch(error => reject({message: error.message}));\r\n        });\r\n    }\r\n\r\n\tlogin(name) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t  setTimeout(() => {\r\n\t\t\t\tif (this.users.includes(name)) {\r\n\t\t\t\t\tthis.currentUser = name;\r\n\t\t\t\t\tresolve({ user: name });\r\n\t\t\t\t} else {\r\n\t\t\t\t\treject(new Error('Invalid credentials.'));\r\n\t\t\t\t}\r\n\t\t  }, this.delay);\r\n\t\t});\r\n\t}\r\n\r\n\tsignup(name) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t  setTimeout(() => {\r\n\t\t\t\tif (!this.users.includes(name)) {\r\n\t\t\t\t\tthis.users.push(name);\r\n\t\t\t\t\tthis.currentUser = name;\r\n\t\t\t\t\tresolve({ user: name });\r\n\t\t\t\t} else {\r\n\t\t\t\t\treject(new Error('This user already exists.'));\r\n\t\t\t\t}\r\n\t\t  }, this.delay);\r\n\t\t});\t\t\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ArticleThumbnail = ({thumbnail, article, currentUser, setEdit}) => {\r\n    if (_.isUndefined(article.title)) {\r\n        return null;\r\n    }\r\n    return (\r\n        <>\r\n            {thumbnail\r\n                ? <Link className=\"p-2 text-muted\" to={`/article/${article.slug}`}>\r\n                    <h2 className=\"blog-post-title\">{article.title}</h2>\r\n                </Link>\r\n                : <h2 className=\"blog-post-title\">{article.title}</h2>\r\n            }\r\n            <p className=\"blog-post-meta\">{article.createdAt} by {article.author}</p>\r\n            <p>{article.tags.map((tag, key) =>\r\n                <span key={key} className=\"badge badge-pill badge-info\">{tag}</span>\r\n            )}</p>\r\n\r\n            <p className=\"text-justify\">{article.body}</p>\r\n            {!thumbnail && currentUser === article.author\r\n                ? <button onClick={setEdit} className=\"btn btn-link float-right\">Edit Article &raquo;</button>\r\n                : ''}\r\n        </>\r\n    );\r\n};\r\n\r\nArticleThumbnail.propTypes = {\r\n    currentUser: PropTypes.string,\r\n    setEdit:     PropTypes.func,\r\n    thumbnail:   PropTypes.bool,\r\n    article:     PropTypes.shape({\r\n        slug:      PropTypes.string,\r\n        title:     PropTypes.string,\r\n        createdAt: PropTypes.string,\r\n        author:    PropTypes.string,\r\n        tags:      PropTypes.array,\r\n        body:      PropTypes.string\r\n    }).isRequired\r\n};\r\n\r\nexport default ArticleThumbnail;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ArticleThumbnail from './ArticleThumbnail';\r\n\r\nconst Home = ({articles, currentUser}) => (\r\n    <>\r\n        {articles.map((article, key) =>\r\n            <ArticleThumbnail key={key} article={article} thumbnail={true} currentUser={currentUser}></ArticleThumbnail>\r\n        )}\r\n    </>\r\n);\r\n\r\nexport default Home;\r\n\r\nHome.propTypes = {\r\n    articles:    PropTypes.array,\r\n    currentUser: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Banner = ({banner}) => {\r\n    if (_.isEmpty(banner)) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className={`alert alert-${banner.type}`} role=\"alert\">\r\n            {banner.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Banner;\r\n\r\nBanner.propTypes = {\r\n    banner: PropTypes.shape({\r\n        type:    PropTypes.string,\r\n        message: PropTypes.string\r\n    }).isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Translation} from 'react-i18next';\r\nimport Banner from './Banner';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            banner:   {}\r\n        };\r\n    }\r\n\r\n    submit = event => {\r\n        const data = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n\r\n        fetch('http://localhost:3010/api/login', {\r\n            method:  'post',\r\n            body:    JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }).then((response) => {\r\n            if (response.status === 200) {\r\n                response.json().then(resp => {\r\n                    this.props.setLoggedIn(resp.user);\r\n                    this.props.history.push({\r\n                        pathname: '/'\r\n                    });\r\n                });\r\n            } else {\r\n                response.json().then(error => {\r\n                    this.setState({\r\n                        username: '',\r\n                        password: '',\r\n                        banner:   {\r\n                            type:    'danger',\r\n                            message: error.message\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }).catch(() => {\r\n            this.setState({\r\n                username: '',\r\n                password: '',\r\n                banner:   {\r\n                    type:    'danger',\r\n                    message: 'Something went wrong!'\r\n                }\r\n            });\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleUserNameChange = event => {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n\r\n    handlePasswordChange = event => {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        const translate = (word) => (\r\n            <Translation>\r\n                {\r\n                    (t, {i18n}) => t(word)\r\n                }\r\n            </Translation>\r\n        );\r\n        return (\r\n            <>\r\n                <Banner banner={this.state.banner}/>\r\n                <form style={{marginTop: '50px'}} className=\"offset-md-2 col-md-9\" onSubmit={this.submit}>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-4 col-form-label\">{translate('login.user-name')}:</label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.username}\r\n                                onChange={this.handleUserNameChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-4 col-form-label\">{translate('login.password')}:</label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                value={this.state.password}\r\n                                onChange={this.handlePasswordChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-10\">\r\n                            <button type=\"submit\" className=\"btn btn-primary float-right\">{translate('nav-bar.log-in')}</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    setLoggedIn: PropTypes.func,\r\n    history:     PropTypes.shape({\r\n        push: PropTypes.func\r\n    }).isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Translation} from 'react-i18next';\r\nimport _ from 'lodash';\r\nimport Banner from './Banner';\r\nimport APIServices from '../common/services/api-service';\r\n\r\nexport default class ArticleForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.apiServices = new APIServices();\r\n        const tags = props.tags.map(tag => {\r\n            let obj;\r\n            if (props.article && props.article.tags.includes(tag)) {\r\n                obj = {name: tag, isChecked: true};\r\n            } else {\r\n                obj = {name: tag, isChecked: false};\r\n            }\r\n            return obj;\r\n        });\r\n        this.state = {\r\n            title:    props.article ? props.article.title : '',\r\n            body:     props.article ? props.article.body : '',\r\n            tags:     tags,\r\n            newTag:   '',\r\n            editMode: props.article,\r\n            banner:   {}\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (_.isEmpty(this.props.currentUser)) {\r\n            this.props.history.push({\r\n                pathname: '/'\r\n            });\r\n        }\r\n    }\r\n\r\n    handleTitleChange = event => {\r\n        this.setState({\r\n            title: event.target.value\r\n        });\r\n    }\r\n\r\n    handleBodyChange = event => {\r\n        this.setState({\r\n            body: event.target.value\r\n        });\r\n    }\r\n\r\n    handleTagSelect = index => {\r\n        const {tags} = this.state;\r\n        tags[index].isChecked = !tags[index].isChecked;\r\n        this.setState({\r\n            tags: tags\r\n        });\r\n    }\r\n\r\n    handleAddNewTagChange = event => {\r\n        this.setState({\r\n            newTag: event.target.value\r\n        });\r\n    }\r\n\r\n    handleAddNewTagClick = () => {\r\n        if (!_.isEmpty(this.state.newTag)) {\r\n            this.setState(prevState => ({\r\n                tags:   prevState.tags.concat({name: prevState.newTag, isChecked: true}),\r\n                newTag: ''\r\n            }));\r\n        }\r\n    }\r\n\r\n    submit = event => {\r\n        let tags = [];\r\n        this.state.tags.forEach(tag => {\r\n            if (tag.isChecked) {\r\n                tags.push(tag.name);\r\n            }\r\n            return null;\r\n        });\r\n        let article = {\r\n            title:  this.state.title,\r\n            body:   this.state.body,\r\n            author: this.props.currentUser,\r\n            tags\r\n        };\r\n\r\n        if (this.state.editMode) {\r\n            article.slug = this.props.article.slug;\r\n\r\n            this.apiServices.update(article)\r\n            .then(data => {\r\n                article.slug = data.slug;\r\n                this.props.clearEditMode(article);\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    banner: {\r\n                        type:    'danger',\r\n                        message: error.message\r\n                    }\r\n                });\r\n            });\r\n\r\n        } else {\r\n            article.createdAt = new Date();\r\n            article.author = this.props.currentUser;\r\n\r\n            this.apiServices.create(article)\r\n            .then(data => {\r\n                this.props.history.push({\r\n                    pathname: `/article/${data.slug}`\r\n                });\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    banner: {\r\n                        type:    'danger',\r\n                        message: error.message\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    render = () => {\r\n        const translate = (word) => (<Translation>{(t, {i18n}) => t(word)}</Translation>);\r\n        return (\r\n            <>\r\n                <Banner banner={this.state.banner}/>\r\n                <form style={{marginTop: '50px'}} onSubmit={this.submit}>\r\n                    <div className=\"form-group row \">\r\n                        <label className=\"col-sm-3 col-form-label\">{translate('article.title')}:</label>\r\n                        <input type=\"text\" className=\"col-sm-9 form-control\" value={this.state.title} onChange={this.handleTitleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-3 col-form-label\">{translate('article.body')}:</label>\r\n                        <textarea\r\n                            type=\"text\"\r\n                            rows=\"5\"\r\n                            className=\"form-control col-md-9\"\r\n                            value={this.state.body}\r\n                            onChange={this.handleBodyChange}/>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-3 col-form-label\">{translate('article.tags')}:</label>\r\n                        <div className=\"form-group\">\r\n                            {this.state.tags && this.state.tags.length > 0\r\n                                ? this.state.tags.map((tag, key) => (\r\n                                    <div key={key} className=\"form-check\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            className=\"form-check-input\"\r\n                                            onChange={this.handleTagSelect.bind(this, key)}\r\n                                            checked={tag.isChecked}\r\n                                            value={tag.name}/>\r\n                                        <label className=\"form-check-label\">{tag.name}</label>\r\n                                    </div>\r\n                                ))\r\n                                : <span> Please add Tag </span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row offset-md-3\">\r\n                        <input type=\"text\" className=\"col-sm-3 form-control\" value={this.state.newTag} onChange={this.handleAddNewTagChange}/>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-link\"\r\n                            onClick={this.handleAddNewTagClick}>\r\n                            {translate('article.add-new-tag')} +\r\n                        </button>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary float-right\">{translate('article.submit')}</button>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nArticleForm.propTypes = {\r\n    tags:          PropTypes.array.isRequired,\r\n    currentUser:   PropTypes.string,\r\n    clearEditMode: PropTypes.func,\r\n    history:       PropTypes.shape({\r\n        push: PropTypes.func\r\n    }).isRequired,\r\n    article: PropTypes.shape({\r\n        tags:  PropTypes.array.isRequired,\r\n        title: PropTypes.string,\r\n        body:  PropTypes.string,\r\n        slug:  PropTypes.string\r\n    })\r\n};\r\n","const Regexpattern = () => ({\r\n    usernameRegex: /^[a-zA-Z0-9]+$/,\r\n    passwordRegex: /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n});\r\n\r\nexport default Regexpattern;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Translation} from 'react-i18next';\r\nimport Banner from './Banner';\r\nimport Regexpattern from '../common/Regexpattern';\r\n\r\nexport default class SignUp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.regex = Regexpattern();\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            cPwd:     '',\r\n            banner:   {}\r\n        };\r\n    }\r\n\r\n    submit = (event) => {\r\n        const data = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n\r\n        fetch('http://localhost:3010/api/signup', {\r\n            method:  'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n            if (response.status === 200) {\r\n                response.json().then(resp => {\r\n                    this.props.setLoggedIn(resp.user);\r\n                    this.props.history.push({\r\n                        pathname: '/'\r\n                    });\r\n                });\r\n            } else {\r\n                response.json().then(msg => {\r\n                    this.setState({\r\n                        username: '',\r\n                        password: '',\r\n                        cPwd:     '',\r\n                        banner:   {\r\n                            type:    'danger',\r\n                            message: msg.message\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }).catch(() => {\r\n            this.setState({\r\n                username: '',\r\n                password: '',\r\n                cPwd:     '',\r\n                banner:   {\r\n                    type:    'danger',\r\n                    message: 'Something went wrong!'\r\n                }\r\n            });\r\n        });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleUserNameChange = (event) => {\r\n        let value = event.target.value;\r\n        if (this.regex.usernameRegex.test(value)) {\r\n            this.setState({\r\n                username: value,\r\n                banner:   {}\r\n            });\r\n        } else {\r\n            this.setState({\r\n                banner: {\r\n                    type:    'danger',\r\n                    message: 'Only alpha-numeric username is allowed!'\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        let pwd = event.target.value;\r\n        if (this.state.cPwd.length > 0) {\r\n            this.setState({\r\n                cPwd: ''\r\n            });\r\n        }\r\n        if (this.regex.passwordRegex.test(pwd)) {\r\n            this.setState({\r\n                banner:   {},\r\n                cPwd:     '',\r\n                password: pwd\r\n            });\r\n        } else {\r\n            this.setState({\r\n                banner: {\r\n                    type:    'danger',\r\n                    message: 'Password must have atleast 1 special character with 6 to 16 charactes in length'\r\n                },\r\n                password: pwd\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCPWDChange = (event) => {\r\n        let cPwd = event.target.value;\r\n        if (this.state.password !== cPwd) {\r\n            this.setState({\r\n                banner: {\r\n                    type:    'danger',\r\n                    message: 'Both passwords do not match'\r\n                },\r\n                cPwd\r\n            });\r\n        } else {\r\n            this.setState({\r\n                banner: {},\r\n                cPwd\r\n            });\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const translate = (word) => (<Translation>{(t, {i18n}) => t(word)}</Translation>);\r\n        return (\r\n            <>\r\n                <Banner banner={this.state.banner}/>\r\n                <form style={{marginTop: '50px'}} className=\"offset-md-2 col-md-9\" onSubmit={this.submit}>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-4 col-form-label\">{translate('signup.user-name')}:</label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.username}\r\n                                onChange={this.handleUserNameChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-4 col-form-label\">{translate('signup.password')}:</label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                value={this.state.password}\r\n                                onChange={this.handlePasswordChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-4 col-form-label\">{translate('signup.confirm-password')}:</label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                value={this.state.cPwd}\r\n                                onChange={this.handleCPWDChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-10\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary float-right\"\r\n                                disabled={this.state.error}>\r\n                                {translate('nav-bar.sign-up')}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSignUp.propTypes = {\r\n    setLoggedIn: PropTypes.func,\r\n    history:     PropTypes.shape({\r\n        push: PropTypes.func\r\n    }).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport APIServices from '../common/services/api-service';\r\nimport ArticleThumbnail from './ArticleThumbnail';\r\nimport ArticleForm from './ArticleForm';\r\nimport Banner from './Banner';\r\n\r\nexport default class Article extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.apiServices = new APIServices();\r\n        this.state = {\r\n            editMode: false,\r\n            article:  {},\r\n            banner:   {}\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this._isMounted = true;\r\n        const slug = this.props.match.params.slug;\r\n\r\n        if (!_.isUndefined(slug)) {\r\n\r\n            this.apiServices.find(slug)\r\n            .then(data => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        article: data\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        banner: {\r\n                            type:    'danger',\r\n                            message: error.message\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    setEditMode = event => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    clearEditMode = article => {\r\n        this.setState({\r\n            editMode: false,\r\n            article:  article\r\n        });\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render = () => (\r\n        <>\r\n            <Banner banner={this.state.banner} />\r\n            {this.state.editMode\r\n                ? <ArticleForm article={this.state.article} tags={this.props.tags} clearEditMode={this.clearEditMode} {...this.props}/>\r\n                : <ArticleThumbnail\r\n                    article={this.state.article}\r\n                    currentUser={this.props.currentUser}\r\n                    setEdit={this.setEditMode}\r\n                    {...this.props}\r\n                    thumbnail={false}/>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nArticle.propTypes = {\r\n    match: PropTypes.shape({\r\n        params: PropTypes.shape({\r\n            slug: PropTypes.string\r\n        }).isRequired\r\n    }).isRequired,\r\n    tags:        PropTypes.array.isRequired,\r\n    currentUser: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport APIServices from '../common/services/api-service';\r\nimport ArticleThumbnail from './ArticleThumbnail';\r\nimport Banner from './Banner';\r\n\r\nclass Tag extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.apiServices = new APIServices();\r\n        this.tag = '';\r\n        this.state = {\r\n            articles: [],\r\n            banner:   {}\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this._isMounted = true;\r\n        this.tag = this.props.match.params.tag;\r\n        if (!_.isUndefined(this.tag)) {\r\n            this.apiServices.articlesByTag(this.tag)\r\n            .then(data => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        articles: data,\r\n                        banner:   {\r\n                            type:    'info',\r\n                            message: `Viewing articles by tag: ${this.tag}`\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        banner: {\r\n                            type:    'danger',\r\n                            message: error.message\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.tag !== this.props.match.params.tag) {\r\n            this.tag = this.props.match.params.tag;\r\n            if (!_.isUndefined(this.tag)) {\r\n                this.apiServices.articlesByTag(this.tag)\r\n                .then(data => {\r\n                    if (this._isMounted) {\r\n                        this.setState({\r\n                            articles: data,\r\n                            banner:   {\r\n                                type:    'info',\r\n                                message: `Viewing articles by tag: ${this.tag}`\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    if (this._isMounted) {\r\n                        this.setState({\r\n                            banner: {\r\n                                type:    'danger',\r\n                                message: error.message\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render = () => (\r\n        <>\r\n            <Banner banner={this.state.banner}/>\r\n            {this.state.articles && this.state.articles.map((article, key) =>\r\n                <ArticleThumbnail key={key} article={article} currentUser={this.props.currentUser} thumbnail={false}></ArticleThumbnail>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nTag.propTypes = {\r\n    match: PropTypes.shape({\r\n        params: PropTypes.shape({\r\n            tag: PropTypes.string\r\n        }).isRequired,\r\n    }).isRequired,\r\n    currentUser: PropTypes.string\r\n};\r\n\r\nexport default Tag;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport APIServices from '../common/services/api-service';\r\nimport ArticleThumbnail from './ArticleThumbnail';\r\nimport Banner from './Banner';\r\n\r\nexport default class Archive extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.apiServices = new APIServices();\r\n        this.archive = '';\r\n        this.state = {\r\n            articles: [],\r\n            banner:   {}\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this._isMounted = true;\r\n        this.archive = this.props.match.params.archive;\r\n        if (!_.isUndefined(this.archive)) {\r\n            this.apiServices.articlesByArchive(this.archive)\r\n            .then(data => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        articles: data,\r\n                        banner:   {\r\n                            type:    'info',\r\n                            message: `Viewing articles created in: ${this.archive}`\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        banner: {\r\n                            type:    'danger',\r\n                            message: error.message\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.archive !== this.props.match.params.archive) {\r\n            this.archive = this.props.match.params.archive;\r\n            if (!_.isUndefined(this.archive)) {\r\n                this.apiServices.articlesByArchive(this.archive)\r\n                .then(data => {\r\n                    if (this._isMounted) {\r\n                        this.setState({\r\n                            articles: data,\r\n                            banner:   {\r\n                                type:    'info',\r\n                                message: `Viewing articles created in: ${this.archive}`\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    if (this._isMounted) {\r\n                        this.setState({\r\n                            banner: {\r\n                                type:    'danger',\r\n                                message: error.message\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render = () => (\r\n        <>\r\n            <Banner banner={this.state.banner}/>\r\n            {this.state.articles && this.state.articles.map((article, key) =>\r\n                <ArticleThumbnail key={key} article={article} currentUser={this.props.currentUser} thumbnail={false}></ArticleThumbnail>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nArchive.propTypes = {\r\n    match: PropTypes.shape({\r\n        params: PropTypes.shape({\r\n            archive: PropTypes.string\r\n        }).isRequired\r\n    }).isRequired,\r\n    currentUser: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Link\r\n} from 'react-router-dom';\r\nimport {Translation} from 'react-i18next';\r\nimport _ from 'lodash';\r\n\r\nimport Header from './Header';\r\nimport NavBar from './NavBar';\r\nimport APIServices from '../common/services/api-service';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport ArticleForm from './ArticleForm';\r\nimport SignUp from './SignUp';\r\nimport Article from './Article';\r\nimport Tag from './Tag';\r\nimport Archive from './Archive';\r\nimport Banner from './Banner';\r\n\r\n/* eslint-disable */\r\nexport default class LandingPage extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.apiServices = new APIServices();\r\n        this.state = {\r\n            archives:    [],\r\n            tags:        [],\r\n            articles:    [],\r\n            currentUser: '',\r\n            navbar:      'home',\r\n            banner:      {}\r\n        };\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        this._isMounted = true;\r\n        let currentUser = sessionStorage.getItem('username');\r\n        if (!_.isNull(currentUser)) {\r\n            this.setState({\r\n                currentUser\r\n            });\r\n        }\r\n\r\n        this.apiServices.allArticlesPreviews()\r\n        .then(response => {\r\n            if (this._isMounted) {\r\n                this.setState({\r\n                    articles: response.previews,\r\n                    archives: response.archives,\r\n                    tags:     response.tags,\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if (this._isMounted) {\r\n                this.setState({\r\n                    banner: {\r\n                        type:    'danger',\r\n                        message: error.message\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        this.setNavbarOnLoad();\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    setLoggedIn = user => {\r\n        sessionStorage.setItem('username', user);\r\n        this.setState({\r\n            currentUser: user,\r\n            navbar: 'home'\r\n        });\r\n    }\r\n\r\n    clearLoggedIn = () => {\r\n        sessionStorage.removeItem('username');\r\n        this.setState({\r\n            currentUser: ''\r\n        });\r\n    }\r\n\r\n    setNavbar = navbar => {\r\n        this.setState({\r\n            navbar,\r\n            banner: {}\r\n        });\r\n    }\r\n\r\n    setNavbarOnLoad = () => {        \r\n        let pathname = window.location.pathname;\r\n        let index = pathname.lastIndexOf('/');\r\n        let nav = pathname.substr(1);\r\n\r\n        if (index > 0) {\r\n            nav = pathname.substr(1, index - 1);\r\n        }\r\n\r\n        if (_.isEmpty(nav) || nav === 'article') {\r\n            nav = 'home';\r\n        }\r\n        this.setState({\r\n            navbar: nav\r\n        });\r\n    }\r\n\r\n    render = () => {        \r\n        const translate = (word) => (<Translation>{(t, {i18n}) => t(word)}</Translation>);\r\n        const homeComponent = (props) => <Home articles={this.state.articles} currentUser={this.state.currentUser} {...props}/>\r\n        const loginComponent = (props) => <Login setLoggedIn={this.setLoggedIn} {...props}/>;\r\n        const signupComponent = (props) => <SignUp setLoggedIn={this.setLoggedIn} {...props}/>;\r\n        const articleFormComponent = (props) => <ArticleForm tags={this.state.tags} currentUser={this.state.currentUser} {...props}/>;\r\n        const articleComponent = (props) => <Article tags={this.state.tags} currentUser={this.state.currentUser} {...props}/>\r\n        const archiveComponent = (props) => <Archive currentUser={this.state.currentUser} {...props}/>\r\n        const tagComponent = (props) => <Tag currentUser={this.state.currentUser} {...props}/>\r\n\r\n        return(\r\n            <>\r\n                <Router>\r\n                    <div className=\"container\">\r\n                    <Header/>\r\n                    <NavBar\r\n                        loggedin={this.state.currentUser ? true : false}\r\n                        clearLoggedIn={this.clearLoggedIn}\r\n                        navbar={this.state.navbar}\r\n                        setNavbar={this.setNavbar}/>\r\n                    </div>\r\n        \r\n                    <main role=\"main\" className=\"container\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-md-8 blog-main\">\r\n                            <div className=\"blog-post\">\r\n                                <Banner banner={this.state.banner}/>\r\n                                <Switch>\r\n                                    <Route path=\"/\" render={homeComponent} exact/>\r\n                                    <Route path=\"/login\" render={loginComponent}/>\r\n                                    <Route path=\"/article/:slug\" render={articleComponent}/>\r\n                                    <Route path=\"/tags/:tag\" render={tagComponent}/>\r\n                                    <Route path=\"/archives/:archive\" render={archiveComponent}/>\r\n                                    <Route path=\"/create-article\" render={articleFormComponent}/>\r\n                                    <Route path=\"/signup\" render={signupComponent}/>\r\n                                </Switch>\r\n                            </div>       \r\n                        </div>\r\n            \r\n                        <aside className=\"col-md-4 blog-sidebar\">\r\n                            <p>{translate('home.welcome')}, {this.state.currentUser === '' ? translate('home.guest') : this.state.currentUser}</p>\r\n                            <div className=\"p-3 mb-3 bg-light rounded\">\r\n                            <h4 className=\"font-italic\">{translate('home.tags')}</h4>\r\n                            <p className=\"mb-0\">\r\n                                {this.state.tags && this.state.tags.map((tag, key) => (\r\n                                    <Link key={key} to={`/tags/${tag}`}>\r\n                                        <span className=\"badge badge-pill badge-info\">{tag}</span>\r\n                                    </Link>\r\n                                ))}\r\n                            </p>\r\n                            </div>\r\n            \r\n                            <div className=\"p-3\">\r\n                            <h4 className=\"font-italic\">{translate('home.archives')}</h4>\r\n                            <ol className=\"list-unstyled mb-0\">\r\n                                {this.state.archives && this.state.archives.map((archive, key) => (\r\n                                    <li key={key}>\r\n                                        <Link to={`/archives/${archive}`}>{archive}</Link>\r\n                                    </li>\r\n                                ))}\r\n                            </ol>\r\n                            </div>\r\n            \r\n                            {/* <div className=\"p-3\">\r\n                            <h4 className=\"font-italic\">{translate('home.elsewhere')}</h4>\r\n                            <ol className=\"list-unstyled\">\r\n                                <li><a href=\"#\">GitHub</a></li>\r\n                                <li><a href=\"#\">Twitter</a></li>\r\n                                <li><a href=\"#\">Facebook</a></li>\r\n                            </ol>\r\n                            </div> */}\r\n                        </aside>        \r\n                        </div>        \r\n                    </main>\r\n            \r\n                    <footer className=\"blog-footer\">\r\n                        <p>\r\n                        <a href=\"#\">Back to top</a>\r\n                        </p>\r\n                    </footer>\r\n                </Router>\r\n            </>\r\n        ); \r\n    }\r\n}\r\n","import React, {Suspense} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './resources/css/blog.css';\nimport LandingPage from './component/LandingPage';\n\nfunction App() {\n    return (\n        <Suspense fallback=\"loading\">\n            <LandingPage/>\n        </Suspense>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}